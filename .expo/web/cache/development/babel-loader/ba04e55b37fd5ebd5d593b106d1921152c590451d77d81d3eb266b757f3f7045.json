{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Image } from \"expo-image\";\nimport { useState } from \"react\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport { Link, useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Avata(_ref) {\n  var avatarUrl = _ref.avatarUrl;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var defaultAvatarUrl = \"URL_Hinh_Mac_Dinh\";\n  var showAvatarModal = function showAvatarModal() {\n    setModalVisible(true);\n  };\n  var closeAvatarModal = function closeAvatarModal() {\n    setModalVisible(false);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: showAvatarModal,\n      children: _jsx(Image, {\n        source: {\n          uri: avatarUrl || defaultAvatarUrl\n        },\n        style: {\n          width: 100,\n          height: 100\n        }\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      visible: isModalVisible,\n      transparent: true,\n      onRequestClose: closeAvatarModal,\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: closeAvatarModal,\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return null;\n            }\n          }), _jsx(Image, {\n            source: {\n              uri: avatarUrl || defaultAvatarUrl\n            },\n            style: {\n              width: 300,\n              height: 300\n            }\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","ScrollView","StyleSheet","Text","View","TextInput","SafeAreaView","TouchableOpacity","Button","Modal","TouchableWithoutFeedback","AntDesign","Image","useState","EvilIcons","Link","useNavigation","jsx","_jsx","jsxs","_jsxs","Avata","_ref","avatarUrl","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","defaultAvatarUrl","showAvatarModal","closeAvatarModal","children","onPress","source","uri","style","width","height","animationType","visible","transparent","onRequestClose","flex","justifyContent","alignItems","backgroundColor"],"sources":["C:/Users/phant/OneDrive/Desktop/thử/shopee-lite-FE-native/Screen/Avatar/Avata.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n  Modal,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Image } from \"expo-image\";\r\nimport { useState } from \"react\";\r\nimport { EvilIcons } from \"@expo/vector-icons\";\r\nimport { Link, useNavigation } from \"@react-navigation/native\";\r\n// import {Avatar} from 'react-native-elements'\r\n\r\nexport default function Avata({ avatarUrl }) {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const defaultAvatarUrl = \"URL_Hinh_Mac_Dinh\"; // Đặt URL cho ảnh mặc định\r\n\r\n  const showAvatarModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const closeAvatarModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={showAvatarModal}>\r\n        <Image\r\n          source={{ uri: avatarUrl || defaultAvatarUrl }} // Sử dụng avatar mặc định nếu avatarUrl là null\r\n          style={{ width: 100, height: 100 }}\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        visible={isModalVisible}\r\n        transparent={true}\r\n        onRequestClose={closeAvatarModal}\r\n      >\r\n        <TouchableWithoutFeedback onPress={closeAvatarModal}>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n            }}\r\n          >\r\n            <TouchableOpacity onPress={() => null}>\r\n              {/* Nút đóng modal */}\r\n            </TouchableOpacity>\r\n            <Image\r\n              source={{ uri: avatarUrl || defaultAvatarUrl }} // Sử dụng avatar mặc định nếu avatarUrl là null\r\n              style={{ width: 300, height: 300 }}\r\n            />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,wBAAA;AAa5C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,IAAI,EAAEC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG/D,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAgB;EAAA,IAAbC,SAAS,GAAAD,IAAA,CAATC,SAAS;EACvC,IAAAC,SAAA,GAA0CX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACtC,IAAMI,gBAAgB,GAAG,mBAAmB;EAE5C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7BH,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,OACER,KAAA,CAAChB,IAAI;IAAA4B,QAAA,GACHd,IAAA,CAACX,gBAAgB;MAAC0B,OAAO,EAAEH,eAAgB;MAAAE,QAAA,EACzCd,IAAA,CAACN,KAAK;QACJsB,MAAM,EAAE;UAAEC,GAAG,EAAEZ,SAAS,IAAIM;QAAiB,CAAE;QAC/CO,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MAAE,CACpC;IAAC,CACc,CAAC,EAEnBpB,IAAA,CAACT,KAAK;MACJ8B,aAAa,EAAC,OAAO;MACrBC,OAAO,EAAEb,cAAe;MACxBc,WAAW,EAAE,IAAK;MAClBC,cAAc,EAAEX,gBAAiB;MAAAC,QAAA,EAEjCd,IAAA,CAACR,wBAAwB;QAACuB,OAAO,EAAEF,gBAAiB;QAAAC,QAAA,EAClDZ,KAAA,CAAChB,IAAI;UACHgC,KAAK,EAAE;YACLO,IAAI,EAAE,CAAC;YACPC,cAAc,EAAE,QAAQ;YACxBC,UAAU,EAAE,QAAQ;YACpBC,eAAe,EAAE;UACnB,CAAE;UAAAd,QAAA,GAEFd,IAAA,CAACX,gBAAgB;YAAC0B,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAM,IAAI;YAAA;UAAC,CAEpB,CAAC,EACnBf,IAAA,CAACN,KAAK;YACJsB,MAAM,EAAE;cAAEC,GAAG,EAAEZ,SAAS,IAAIM;YAAiB,CAAE;YAC/CO,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAG;cAAEC,MAAM,EAAE;YAAI;UAAE,CACpC,CAAC;QAAA,CACE;MAAC,CACiB;IAAC,CACtB,CAAC;EAAA,CACJ,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}