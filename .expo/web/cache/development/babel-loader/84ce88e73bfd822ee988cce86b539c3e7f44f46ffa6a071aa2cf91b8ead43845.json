{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport ModalNotification from \"../ProductDetails/Modal/ModalNotification\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChooseBank = function ChooseBank() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    accountNumber = _useState2[0],\n    setAccountNumber = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedBank = _useState4[0],\n    setSelectedBank = _useState4[1];\n  var banks = [\"Ngân hàng ACB\", \"Ngân hàng TPBank\", \"Ngân hàng SeABank\", \"Ngân hàng Techcombank\", \"Ngân hàng VPBank\", \"Ngân hàng VietinBank\", \"Ngân hàng VCB\", \"Ngân hàng BIDV\", \"Ngân hàng Agribank\"];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isModalVisibleCart = _useState6[0],\n    setModalVisibleCart = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    notification = _useState8[0],\n    setNotification = _useState8[1];\n  var handleCart = function handleCart() {\n    setModalVisibleCart(!isModalVisibleCart);\n    setNotification(\"Thêm ngân hàng thành công !\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"S\\u1ED1 T\\xE0i Kho\\u1EA3n Ng\\xE2n H\\xE0ng\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nh\\u1EADp s\\u1ED1 t\\xE0i kho\\u1EA3n ng\\xE2n h\\xE0ng\",\n      value: accountNumber,\n      onChangeText: function onChangeText(text) {\n        return setAccountNumber(text);\n      },\n      keyboardType: \"numeric\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Ch\\u1ECDn Ng\\xE2n H\\xE0ng\"\n    }), _jsx(Picker, {\n      style: styles.input,\n      selectedValue: selectedBank,\n      onValueChange: function onValueChange(itemValue) {\n        return setSelectedBank(itemValue);\n      },\n      children: banks.map(function (bank, index) {\n        return _jsx(Picker.Item, {\n          label: bank,\n          value: bank\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.saveButton,\n      onPress: handleCart,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"L\\u01B0u\"\n      })\n    }), _jsx(ModalNotification, {\n      isVisible: isModalVisibleCart,\n      message: notification,\n      onClose: handleCart\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: \"center\"\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 8\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingHorizontal: 10\n  },\n  saveButton: {\n    backgroundColor: \"#ff7337\",\n    padding: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18\n  }\n});\nexport default ChooseBank;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Picker","ModalNotification","jsx","_jsx","jsxs","_jsxs","ChooseBank","_useState","_useState2","_slicedToArray","accountNumber","setAccountNumber","_useState3","_useState4","selectedBank","setSelectedBank","banks","_useState5","_useState6","isModalVisibleCart","setModalVisibleCart","_useState7","_useState8","notification","setNotification","handleCart","style","styles","container","children","label","input","placeholder","value","onChangeText","text","keyboardType","selectedValue","onValueChange","itemValue","map","bank","index","Item","saveButton","onPress","buttonText","isVisible","message","onClose","create","flex","padding","justifyContent","fontSize","marginBottom","height","borderColor","borderBottomWidth","paddingHorizontal","backgroundColor","alignItems","color"],"sources":["C:/Users/phant/OneDrive/Desktop/thử/shopee-lite-FE-native/Screen/Pay/ChooseBank.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport ModalNotification from \"../ProductDetails/Modal/ModalNotification\";\r\nconst ChooseBank = () => {\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [selectedBank, setSelectedBank] = useState(\"\");\r\n  const banks = [\r\n    \"Ngân hàng ACB\",\r\n    \"Ngân hàng TPBank\",\r\n    \"Ngân hàng SeABank\",\r\n    \"Ngân hàng Techcombank\",\r\n    \"Ngân hàng VPBank\",\r\n    \"Ngân hàng VietinBank\",\r\n    \"Ngân hàng VCB\",\r\n    \"Ngân hàng BIDV\",\r\n    \"Ngân hàng Agribank\",\r\n  ];\r\n  const [isModalVisibleCart, setModalVisibleCart] = useState(false);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const handleCart = () => {\r\n    setModalVisibleCart(!isModalVisibleCart);\r\n    setNotification(\"Thêm ngân hàng thành công !\");\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>Số Tài Khoản Ngân Hàng</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nhập số tài khoản ngân hàng\"\r\n        value={accountNumber}\r\n        onChangeText={(text) => setAccountNumber(text)}\r\n        keyboardType=\"numeric\"\r\n      />\r\n\r\n      <Text style={styles.label}>Chọn Ngân Hàng</Text>\r\n      <Picker\r\n        style={styles.input}\r\n        selectedValue={selectedBank} // selectedBank giá trị được chọn hiện tại trong Picker\r\n        onValueChange={(itemValue) => setSelectedBank(itemValue)} // hàm callback được gọi khi người dùng chọn một giá trị mới trong Picker\r\n      >\r\n        {banks.map((bank, index) => (\r\n          <Picker.Item key={index} label={bank} value={bank} />\r\n        ))}\r\n      </Picker>\r\n\r\n      <TouchableOpacity style={styles.saveButton} onPress={handleCart}>\r\n        <Text style={styles.buttonText}>Lưu</Text>\r\n      </TouchableOpacity>\r\n      <ModalNotification\r\n        isVisible={isModalVisibleCart}\r\n        message={notification}\r\n        onClose={handleCart}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n  },\r\n  label: {\r\n    fontSize: 18,\r\n    marginBottom: 8,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 16,\r\n    paddingHorizontal: 10,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"#ff7337\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default ChooseBank;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}