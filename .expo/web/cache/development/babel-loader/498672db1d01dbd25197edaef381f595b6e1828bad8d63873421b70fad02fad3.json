{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Verification = function Verification() {\n  var navigation = useNavigation();\n  var inputFocus = useRef([]);\n  var _useState = useState([\"\", \"\", \"\", \"\", \"\", \"\"]),\n    _useState2 = _slicedToArray(_useState, 2),\n    otp = _useState2[0],\n    setOtp = _useState2[1];\n  var handleOTPChange = function handleOTPChange(text, index) {\n    if (text.length <= 1) {\n      setOtp(function (prevOtp) {\n        var newOtp = _toConsumableArray(prevOtp);\n        newOtp[index] = text;\n        return newOtp;\n      });\n      if (text.length === 0 && index > 0) {\n        inputFocus.current[index - 1].focus();\n      } else if (text.length === 1 && index < 5) {\n        inputFocus.current[index + 1].focus();\n      }\n    }\n  };\n  var handleConfirm = function handleConfirm() {\n    if (otp.join(\"\").length === 6) {\n      navigation.navigate(\"Reset\");\n    } else {\n      alert(\"Vui lòng điền đầy đủ mã xác nhận !\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Nh\\u1EADp m\\xE3 x\\xE1c nh\\u1EADn\"\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: otp.map(function (value, index) {\n        return _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"-\",\n          keyboardType: \"numeric\",\n          maxLength: 1,\n          value: value,\n          onChangeText: function onChangeText(text) {\n            return handleOTPChange(text, index);\n          },\n          ref: function ref(input) {\n            return inputFocus.current[index] = input;\n          }\n        }, index.toString());\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.forgotButton,\n      onPress: handleConfirm,\n      children: _jsx(Text, {\n        style: styles.confirmButtonText,\n        children: \"X\\xE1c nh\\u1EADn\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 24\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  input: {\n    height: 40,\n    width: 40,\n    borderColor: \"gray\",\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    margin: 5,\n    textAlign: \"center\"\n  },\n  confirmButton: {\n    backgroundColor: \"#4CAF50\",\n    borderRadius: 4,\n    padding: 12,\n    marginTop: 24\n  },\n  confirmButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  forgotButton: {\n    marginTop: 10,\n    backgroundColor: \"#ff6f61\",\n    borderRadius: 4,\n    width: 200,\n    padding: 12,\n    alignItems: \"center\"\n  },\n  forgotButtonHide: {\n    marginTop: 10,\n    backgroundColor: \"#cccccc\",\n    width: 200,\n    borderRadius: 4,\n    padding: 12,\n    alignItems: \"center\"\n  }\n});\nexport default Verification;","map":{"version":3,"names":["React","useState","useRef","useNavigation","View","TextInput","TouchableOpacity","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","Verification","navigation","inputFocus","_useState","_useState2","_slicedToArray","otp","setOtp","handleOTPChange","text","index","length","prevOtp","newOtp","_toConsumableArray","current","focus","handleConfirm","join","navigate","alert","style","styles","container","children","header","inputContainer","map","value","input","placeholder","keyboardType","maxLength","onChangeText","ref","toString","forgotButton","onPress","confirmButtonText","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","flexDirection","height","width","borderColor","borderWidth","borderBottomWidth","margin","textAlign","confirmButton","backgroundColor","borderRadius","marginTop","color","fontWeight","forgotButtonHide"],"sources":["D:/các dự án cá nhân/react-native/shopee/client/Screen/Authenticate/Forgot/Verification.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n} from \"react-native\";\r\n\r\nconst Verification = () => {\r\n  const navigation = useNavigation();\r\n  const inputFocus = useRef([]);\r\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const handleOTPChange = (text, index) => {\r\n    if (text.length <= 1) {\r\n      // kiểm tra xem người dùng đã nhập ký tự mới vào ô input hay chưa\r\n      setOtp((prevOtp) => {\r\n        let newOtp = [...prevOtp]; // tạo ra 1 bản sao của otp là newOtp\r\n        newOtp[index] = text; // cập nhật phần tử tại vị trí index được truyền vào của mảng mới này thành text\r\n        return newOtp;\r\n      });\r\n      if (text.length === 0 && index > 0) {\r\n        // kiểm tra xem độ dài của text bằng 1\r\n        // và không phải ô dầu tiên , di chuyển về ô trước đó\r\n        inputFocus.current[index - 1].focus();\r\n      } else if (text.length === 1 && index < 5) {\r\n        // kiểm tra xem độ dài của text bằng 1\r\n        //nếu ô input hiện tại không phải ô cuối cùng sẽ chuyển forcus đến ô tiếp theo\r\n        inputFocus.current[index + 1].focus();\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    if (otp.join(\"\").length === 6) {\r\n      navigation.navigate(\"Reset\");\r\n    } else {\r\n      alert(\"Vui lòng điền đầy đủ mã xác nhận !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Nhập mã xác nhận</Text>\r\n      <View style={styles.inputContainer}>\r\n        {otp.map((value, index) => (\r\n          <TextInput\r\n            key={index.toString()}\r\n            style={styles.input}\r\n            placeholder=\"-\"\r\n            keyboardType=\"numeric\"\r\n            maxLength={1}\r\n            value={value}\r\n            onChangeText={(text) => handleOTPChange(text, index)}\r\n            ref={(input) => (inputFocus.current[index] = input)}\r\n          />\r\n        ))}\r\n      </View>\r\n      <TouchableOpacity style={styles.forgotButton} onPress={handleConfirm}>\r\n        <Text style={styles.confirmButtonText}>Xác nhận</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    marginBottom: 24,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    width: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 0,\r\n    borderBottomWidth: 1,\r\n    margin: 5,\r\n    textAlign: \"center\",\r\n  },\r\n  confirmButton: {\r\n    backgroundColor: \"#4CAF50\",\r\n    borderRadius: 4,\r\n    padding: 12,\r\n    marginTop: 24,\r\n  },\r\n  confirmButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  forgotButton: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#ff6f61\",\r\n    borderRadius: 4,\r\n    width: 200,\r\n    padding: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  forgotButtonHide: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#cccccc\",\r\n    width: 200,\r\n    borderRadius: 4,\r\n    padding: 12,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default Verification;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}